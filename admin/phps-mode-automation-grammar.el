;;; phps-mode-automation-grammar --- Grammar -*- lexical-binding: t -*-

;;; Commentary:

;;; Code:

(defconst
  phps-mode-automation-grammar-non-terminals
  '(
    absolute_trait_method_reference
    alt_if_stmt
    alt_if_stmt_without_else
    anonymous_class
    argument
    argument_list
    array_object_dereferencable
    array_pair
    array_pair_list
    attribute
    attribute_decl
    attribute_group
    attributed_class_statement
    attributed_parameter
    attributed_statement
    attributes
    backticks_expr
    backup_doc_comment
    backup_fn_flags
    backup_lex_pos
    callable_expr
    callable_variable
    case_list
    case_separator
    catch_list
    catch_name_list
    class_const_decl
    class_const_list
    class_constant
    class_declaration_statement
    class_modifier
    class_modifiers
    class_name
    class_name_list
    class_name_reference
    class_statement
    class_statement_list
    const_decl
    const_list
    constant
    ctor_arguments
    declare_statement
    dereferencable_scalar
    echo_expr_list
    encaps_list
    encaps_var
    encaps_var_offset
    exit_expr
    expr
    extends_from
    finally_statement
    fn
    for_exprs
    for_statement
    foreach_statement
    foreach_variable
    fully_dereferencable
    function
    function_call
    function_declaration_statement
    global_var
    global_var_list
    group_use_declaration
    identifier
    if_stmt
    if_stmt_without_else
    implements_list
    inline_function
    inline_use_declaration
    inline_use_declarations
    inner_statement
    inner_statement_list
    interface_declaration_statement
    interface_extends_list
    internal_functions_in_yacc
    is_reference
    is_variadic
    isset_variable
    isset_variables
    legacy_namespace_name
    lexical_var
    lexical_var_list
    lexical_vars
    match
    match_arm
    match_arm_cond_list
    match_arm_list
    member_modifier
    member_name
    method_body
    method_modifiers
    mixed_group_use_declaration
    name
    namespace_declaration_name
    namespace_name
    new_expr
    new_variable
    non_empty_argument_list
    non_empty_array_pair_list
    non_empty_for_exprs
    non_empty_match_arm_list
    non_empty_member_modifiers
    non_empty_parameter_list
    optional_expr
    optional_type_without_static
    optional_variable
    optional_visibility_modifier
    parameter
    parameter_list
    possible_array_pair
    possible_comma
    property
    property_list
    property_name
    reserved_non_modifiers
    return_type
    returns_ref
    scalar
    semi_reserved
    simple_variable
    start
    statement
    static_member
    static_var
    static_var_list
    switch_case_list
    top_statement
    top_statement_list
    trait_adaptation
    trait_adaptation_list
    trait_adaptations
    trait_alias
    trait_declaration_statement
    trait_method_reference
    trait_precedence
    type
    type_expr
    type_expr_without_static
    type_without_static
    union_type
    union_type_without_static
    unprefixed_use_declaration
    unprefixed_use_declarations
    unset_variable
    unset_variables
    use_declaration
    use_declarations
    use_type
    variable
    variable_class_name
    variable_modifiers
    while_statement
    )
  "The non-terminals in grammar.")

(defconst
  phps-mode-automation-grammar-terminals
  '(
    "!"
    "%"
    "&"
    "("
    ")"
    "*"
    "+"
    ","
    "-"
    "/"
    ":"
    ";"
    "<"
    "="
    ">"
    "?"
    "@"
    "["
    "]"
    "^"
    "|"
    "~"
    T_ABSTRACT
    T_AND
    T_ARG
    T_ARRAY
    T_ARROW
    T_AS
    T_ASSIGN
    T_ATTRIBUTE
    T_BAD
    T_BOOL
    T_BOOLEAN
    T_BREAK
    T_CALL
    T_CALLABLE
    T_CASE
    T_CATCH
    T_CLASS
    T_CLONE
    T_CLOSE
    T_CLOSURE
    T_COALESCE
    T_COMMENT
    T_COMPILER
    T_CONCAT
    T_CONDITIONAL
    T_CONST
    T_CONSTANT
    T_CONTINUE
    T_CURLY
    T_DEC
    T_DECL
    T_DECLARE
    T_DEFAULT
    T_DIM
    T_DIR
    T_DIV
    T_DNUMBER
    T_DO
    T_DOC
    T_DOLLAR
    T_DOUBLE
    T_ECHO
    T_ELLIPSIS
    T_ELSE
    T_ELSEIF
    T_EMPTY
    T_ENCAPS
    T_ENCAPSED
    T_END
    T_ENDDECLARE
    T_ENDFOR
    T_ENDFOREACH
    T_ENDIF
    T_ENDSWITCH
    T_ENDWHILE
    T_EQUAL
    T_ERROR
    T_EVAL
    T_EXIT
    T_EXPR
    T_EXTENDS
    T_FILE
    T_FINAL
    T_FINALLY
    T_FN
    T_FOR
    T_FOREACH
    T_FQ
    T_FUNC
    T_FUNCTION
    T_GLOBAL
    T_GOTO
    T_GREATER
    T_GROUP
    T_HALT
    T_IDENTICAL
    T_IF
    T_IMPLEMENTS
    T_INC
    T_INCLUDE
    T_INLINE
    T_INSTANCEOF
    T_INSTEADOF
    T_INT
    T_INTERFACE
    T_IS
    T_ISSET
    T_LABEL
    T_LINE
    T_LIST
    T_LNUMBER
    T_LOGICAL
    T_MAGIC
    T_MATCH
    T_METHOD
    T_MINUS
    T_MOD
    T_MUL
    T_NAME
    T_NAMED
    T_NAMESPACE
    T_NEW
    T_NOELSE
    T_NS
    T_NULLSAFE
    T_NUM
    T_OBJECT
    T_OPEN
    T_OPERATOR
    T_OR
    T_PAAMAYIM
    T_PARAM
    T_PLUS
    T_POST
    T_POW
    T_PRE
    T_PRINT
    T_PRIVATE
    T_PROP
    T_PROTECTED
    T_PUBLIC
    T_REF
    T_REQUIRE
    T_RETURN
    T_SHELL
    T_SILENCE
    T_SL
    T_SPACESHIP
    T_SR
    T_START
    T_STATIC
    T_STMT
    T_STRING
    T_SWITCH
    T_THROW
    T_TRAIT
    T_TRY
    T_TYPE
    T_UNARY
    T_UNPACK
    T_UNSET
    T_USE
    T_VAR
    T_VARIABLE
    T_WHILE
    T_WHITESPACE
    T_XOR
    T_YIELD
    )
  "The terminals of grammar.")

(defconst
  phps-mode-automation-grammar-look-ahead-number
  1
  "The look-ahead number of grammar.")

(defconst
  phps-mode-automation-grammar-productions
  '(
    ;; TODO Implement this
    )
  "The productions of grammar.")

;; TODO Add lex-analyzer as well


(provide 'phps-mode-automation-grammar)

;;; phps-mode-automation-grammar.el ends here

