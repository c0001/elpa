* ELISA

[[http://www.gnu.org/licenses/gpl-3.0.txt][file:https://img.shields.io/badge/license-GPL_3-green.svg]]
[[https://melpa.org/#/elisa][file:https://melpa.org/packages/elisa-badge.svg]]

ELISA (Emacs Lisp Information System Assistant) is a project
designed to help Emacs users quickly find answers to their
questions related to Emacs and Emacs Lisp. Utilizing the powerful
Ellama package, ELISA provides accurate and relevant responses to
user queries, enhancing productivity and efficiency in the Emacs
environment. By integrating links to the Emacs info manual after
answering a question, ELISA ensures that users have easy access to
additional information on the topic, making it an essential tool
for both beginners and advanced Emacs users.

ELISA creates index from info manuals. When you send message to
~elisa-chat~ it search to semantically similar info nodes in index,
get first ~elisa-limit~ nodes, add it to context and send your message
to llm. LLM generates answer to your message based on provided
context. You can read not only answer generated by llm, but also info
manuals by provided links.

** Installation

You need emacs 29.2 or newer to use this package.

This package now on [[https://melpa.org/#/getting-started][MELPA]] and you can just ~M-x~ ~package-install~
~elisa~.

*** System dependencies

Then you need to download ~sqlite-vss~. You can do it manually from
https://github.com/asg017/sqlite-vss/releases or by calling ~M-x~
~elisa-download-sqlite-vss~.

You can use this package with different llm providers. By default it
uses [[https://github.com/jmorganca/ollama][ollama]] provider both for embeddings and chat. If you ok with it,
you need to install [[https://github.com/jmorganca/ollama][ollama]] and pull used models:

#+begin_src shell
  ollama pull nomic-embed-text
  ollama pull sskostyaev/openchat:8k-rag
#+end_src

Second model is just [[https://ollama.com/library/openchat][openchat]] with exactly 2 tweaks: context window
extended to 8k and temperature set to 0 to better usage for RAG
(Retrieval Augmented Generation). You can try other models, for
example:
- [[https://ollama.com/library/all-minilm][all-minilm]] for embeddings
- [[sskostyaev/mistral:32k-rag][sskostyaev/mistral:32k-rag]] for chat
- other [[https://ollama.com/library][models]] or [[https://github.com/ahyatt/llm?tab=readme-ov-file#setting-up-providers][providers]]
- [[https://github.com/ollama/ollama?tab=readme-ov-file#create-a-model][create your own model]]

Create index for builtin, external or all info manuals by one of this
commands:
- ~elisa-async-parse-builtin-manuals~
- ~elisa-async-parse-external-manuals~
- ~elisa-async-parse-all-manuals~

This can take some time.

** Commands

*** elisa-chat

Entrypoint. Makes similarity search in index, add semantically similar
info nodes into context and query llm for prompt. Uses ~ellama~ under
the hood. Call one of parse manuals functions to create index before
use it.

*** elisa-download-sqlite-vss

Download [[https://github.com/asg017/sqlite-vss][sqlite vss]] extension to provide similarity search.

*** elisa-async-parse-builtin-manuals

Parse builtin emacs info manuals asyncronously. Can take long time.

*** elisa-async-parse-external-manuals

Parse external emacs info manuals asyncronously.

*** elisa-async-parse-all-manuals

Parse all emacs info manuals asyncronously.

One of parse functions should be called before ~elisa-chat~ to create
index.

** Configuration

Example configuration. With default installation you don't need it.

#+begin_src emacs-lisp
  (use-package elisa
    :init
    (setopt elisa-limit 5)
    (require 'llm-ollama)
    (setopt elisa-embeddings-provider (make-llm-ollama :embedding-model "nomic-embed-text"))
    (setopt elisa-chat-provider (make-llm-ollama
				 :chat-model "sskostyaev/openchat:8k-rag"
				 :embedding-model "nomic-embed-text")))
#+end_src

***  ELISA Custom Variables

**** General Settings

+ *~elisa-embeddings-provider~*:
    * Description: LLM provider to generate embeddings for text.
    * Default: ~(make-llm-ollama :embedding-model "nomic-embed-text")~

+ *~elisa-chat-provider~*:
    * Description: LLM provider used for chat interactions.
    * Default: ~(make-llm-ollama :chat-model "sskostyaev/openchat:8k-rag" :embedding-model
      "nomic-embed-text")~

+ *~elisa-db-directory~*:
    * Type: Directory
    * Description: Specifies the directory where ELISA stores its database.
    * Default: ~(file-name-concat user-emacs-directory "elisa")~ (within your Emacs config
      directory)

+ *~elisa-limit~*:
    * Type: Integer
    * Description: Controls the number of quotes passed to the LLM context for generating an
      answer.
    * Default: 5

+ *~elisa-find-executable~*:
    * Type: String
    * Description: Path to the ~find~ command executable. Used for locating files.
    * Default: ~"find"~

**** File System and Database Management

+ *~elisa-tar-executable~*:
    * Type: String
    * Description: Path to the ~tar~ command executable. Used for archiving files.
    * Default: ~"tar"~

+ *~elisa-sqlite-vss-version~*:
    * Type: String
    * Description: Version of the SQLite VSS extension.

+ *~elisa-sqlite-vss-path~*:
    * Type: File path
    * Description: Path to the SQLite VSS extension file.

+ *~elisa-sqlite-vector-path~*:
    * Type: File path
    * Description: Path to the SQLite Vector extension file.

**** Text Processing and Semantic Splitting

+ *~elisa-semantic-split-function~*:
    * Type: Function
    * Description:  Function used to split text into semantically meaningful chunks.
    * Default: ~elisa-split-by-paragraph~

+ *~elisa-prompt-rewriting-enabled~*:
    * Type: Boolean
    * Description: Enables or disables prompt rewriting for better retrieving.
    * Default: ~t~ (enabled)

+ *~elisa-chat-prompt-template~*:
    * Type: String
    * Description: Template used for constructing the chat prompt.

+ *~elisa-rewrite-prompt-template~*:
    * Type: String
    * Description: Template used for rewriting prompts for better retrieval.

**** Web Search and Integration

+ *~elisa-searxng-url~*:
    * Type: String
    * Description: URL of your SearXNG instance.
    * Default: ~"http://localhost:8080/"~

+ *~elisa-pandoc-executable~*:
    * Type: String
    * Description: Path to the ~pandoc~ command executable. Used for converting documents to text.
    * Default: ~"pandoc"~

+ *~elisa-webpage-extraction-function~*:
    * Type: Function
    * Description: Function used to extract the content from a webpage.
    * Default: ~elisa-get-webpage-buffer~

+ *~elisa-web-search-function~*:
    * Type: Function
    * Description: Function responsible for performing web searches using the provided prompt.
    * Default: ~elisa-search-duckduckgo~

+ *~elisa-web-pages-limit~*:
    * Type: Integer
    * Description: Maximum number of web pages to parse during a search.
    * Default: 10

**** Reranking

+ *~elisa-breakpoint-threshold-amount~*:
    * Type: Float
    * Description: Threshold used for controlling the granularity of semantic splitting.
    * Default: 0.4

+ *~elisa-reranker-enabled~*:
    * Type: Boolean
    * Description: Enables or disables reranking, which can improve retrieval quality by ranking
      retrieved quotes based on relevance.
    * Default: ~nil~ (not set)

+ *~elisa-reranker-url~*:
    * Type: String
    * Description: URL of the reranking service.
    * Default: ~"http://127.0.0.1:8787/"~

+ *~elisa-reranker-similarity-threshold~*:
    * Type: Float
    * Description: Similarity threshold for reranking. Quotes below this threshold will be filtered
      out. If not set all ~ellama-limit~ quotes will be added to context.
    * Default: 0

+ *~elisa-reranker-limit~*:
    * Type: Integer
    * Description: Number of quotes to send to the reranker.
    * Default: 20

**** File Parsing and Exclusion

+ *~elisa-ignore-patterns-files~*:
    * Type: List of strings
    * Description: List of file name patterns (e.g., ~.gitignore~) used to ignore files during
      parsing.
    * Default: ~(".gitignore" ".ignore" ".rgignore")~

+ *~elisa-ignore-invisible-files~*:
    * Type: Boolean
    * Description: Toggles whether invisible files and directories should be ignored during
      parsing.
    * Default: ~t~ (true)

**** ELISA Chat Collections

+ *~elisa-enabled-collections~*:
    * Type: List of strings
    * Description: Specifies which collections are enabled for chat interactions.
    * Default: ~("builtin manuals" "external manuals")~

** Contributions

To contribute, submit a pull request or report a bug. This library is
planned to be part of GNU ELPA; major contributions must be from
someone with FSF papers. Alternatively, you can write a module and
share it on a different archive like MELPA.
