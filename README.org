#+TITLE: bufferlo.el - Manage frame/tab-local buffer lists
#+AUTHOR: Florian Rommel
#+LANGUAGE: en

* Introduction

Bufferlo manages buffer lists that are local to the frame or (tab-bar)
tab.  It uses the existing buffer-list frame parameter and provides
commands to manipulate this list.

Bufferlo does not touch the global buffer list or any existing
buffer-management facilities (buffer-menu, ibuffer, switch-to-buffer).
Use the equivalent bufferlo variants to work with the frame/tab local
buffer list.

This is similar to the now unmaintained [[https://github.com/alpaker/frame-bufs][frame-bufs]] package but is
compatible with (tab-bar) tabs and supports desktop.el.


* Installation

Put ~bufferlo.el~ in your load path and require it in your init file:
#+BEGIN_SRC emacs-lisp
(require 'bufferlo)
#+END_SRC

Enable ~bufferlo-mode~ in your init file order to enable the configuration
and desktop support
#+BEGIN_SRC emacs-lisp
(bufferlo-mode 1)
#+END_SRC

Or use use-package:
#+BEGIN_SRC emacs-lisp
(use-package bufferlo
 :config
 (bufferlo-mode 1))
#+END_SRC


* Usage

Use the bufferlo buffer-list commands an alternative to the respective
global commands.

Use ~bufferlo-{clear,remove,bury}~ to manage the frame/tab-local list.
A buffer is added to the local buffer-list if it is shown in the frame/tab.

It is recommended to combine bufferlo with a completion framework.
This is an example source for consult-buffer:
#+begin_src emacs-lisp
(defvar my-consult--source-local-buffer
    `(:name "Local Buffers"
            :narrow   ?l  ;; toggle local buffers with <l>
            :hidden   t   ;; set to nil to always show the local buffers
                          ;; (For this being effective, you should also
                          ;;  define a hidden global buffer source)
            :category buffer
            :face     consult-buffer
            :history  buffer-name-history
            :state    ,#'consult--buffer-state
            :default  nil
            :items ,(lambda () (consult--buffer-query
                                :predicate #'bufferlo-local-buffer-p
                                :sort 'visibility
                                :as #'buffer-name)))
#+end_src
Add ~my-consult--source-local-buffer~ to your consult-buffer-sources list.
