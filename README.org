* ELISA

[[http://www.gnu.org/licenses/gpl-3.0.txt][file:https://img.shields.io/badge/license-GPL_3-green.svg]]

ELISA (Emacs Lisp Information System Assistant) is a project
designed to help Emacs users quickly find answers to their
questions related to Emacs and Emacs Lisp. Utilizing the powerful
Ellama package, ELISA provides accurate and relevant responses to
user queries, enhancing productivity and efficiency in the Emacs
environment. By integrating links to the Emacs info manual after
answering a question, ELISA ensures that users have easy access to
additional information on the topic, making it an essential tool
for both beginners and advanced Emacs users.

** Installation

** Commands

*** elisa-chat

Entrypoint. Makes similarity search in index, add semantically similar
info nodes into context and query llm for prompt. Uses ~ellama~ under
the hood. Call one of parse manuals functions to create index before
use it.

*** elisa-download-sqlite-vss

Download [[https://github.com/asg017/sqlite-vss][sqlite vss]] extension to provide similarity search. Will be
called automatically if needed.

*** elisa-async-parse-builtin-manuals

Parse builtin emacs info manuals asyncronously. Can take long time.

*** elisa-async-parse-external-manuals

Parse external emacs info manuals asyncronously.

*** elisa-async-parse-all-manuals

Parse all emacs info manuals asyncronously.

One of parse functions should be called before ~elisa-chat~ to create
index.

** Configuration

Example configuration. I use [[https://github.com/toshsan/embedding-server][toshsan/embedding-server]] for embeddings.

#+begin_src emacs-lisp
  (use-package elisa
  :init
  (setopt elisa-embeddings-provider (progn
				      (require 'llm-openai)
				      (setq llm-warn-on-nonfree nil)
				      (make-llm-openai-compatible
				       :embedding-model "all-MiniLM-L6-v2"
				       :url "http://localhost:8000/v1"
				       :key "YOUR_KEY"))))
#+end_src

** Contributions

To contribute, submit a pull request or report a bug. This library is
planned to be part of GNU ELPA; major contributions must be from
someone with FSF papers. Alternatively, you can write a module and
share it on a different archive like MELPA.
