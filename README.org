* Gnorb

Glue code between the Gnus, Org, and BBDB packages for Emacs.

This package connects Emacs-based email, project management, and
contact management a little more closely together. The goal is to
reduce friction when manipulating TODOs, contacts, messages, and
files. An underlying principle is that one should stay in the Org
Agenda as much as possible: Gnus should serve as input/output for the
Agenda, and BBDB should serve as an alternate view on information.
This isn't actually enforced, of course, it's just an ideal.

Put "gnorb/lisp" in your load path, then either require "gnorb" to
load everything, or pick bits and pieces: "gnorb-gnus", "gnorb-org",
or "gnorb-bbdb". As much as possible, I've tried to keep the included
functions discrete and modular: each can be used in isolation, and
there's little or no package-level lock-in.

Recommended keybindings/integration measures are shown below. Copy
them into your init files and edit as you see fit.

Code in this package is aimed at the development (git) versions of
Gnus, Org, and BBDB (that means BBDB 3: upgrade, already!). I'll try
to make it work with the most recent stable releases of those
packages, but I'm not promising anything.

** Gnorb-BBDB
*** Functions
**** gnorb-bbdb-tag-agenda
Give BBDB records an org-tag field (customizable), then call this
function on the current records(s) to open an Org agenda tags search
using those tags.
**** gnorb-bbdb-mail-search
Search for all mail messages from the record(s) displayed. Currently
supports the notmuch, mairix, and namazu search backends; set
`gnorb-gnus-mail-search-backend' to one of those symbol values.
**** gnorb-bbdb-cite-contact
Prompt for a BBDB record and insert a string of the type "Bob Smith
<bob@smith.com>".
*** User Options
**** gnorb-bbdb-org-tag-field
The name of the BBDB xfield that holds Org-related tags. Specified as
a string with the ":" separator between tags, same as for Org
headings. Defaults to 'org-tag.
*** Suggested Keybindings
#+BEGIN_SRC emacs-lisp
  (eval-after-load "gnorb-bbdb"
    '(progn
       (define-key bbdb-mode-map (kbd "O") 'gnorb-bbdb-tag-agenda)
       (define-key bbdb-mode-map (kbd "S") 'gnorb-bbdb-mail-search)
       (global-set-key (kbd "C-c C") 'gnorb-bbdb-cite-contact)))
#+END_SRC
** Gnorb-Org
*** Functions
**** gnorb-org-contact-link
Prompt for a BBDB record and insert a link to that record at
point.
**** gnorb-org-handle-mail
This function does its best to interpret the heading under point as an
email action.

If the heading text contains a link to a Gnus message then start a
reply to that message, otherwise start composing a new message. If the
heading contains mailto links or BBDB links, put those addresses in
the "To" field of the new message (or reply). If the heading has
org-attach'ed attachments, prompt to attach them to the outgoing
message.

When the message is sent, return to the original Org buffer. If the
heading's TODO keyword is a member of `gnorb-org-mail-todos' (by
default, "MAIL" and "REPLY"), then call `org-agenda-todo' and prompt
to mark the TODO as done. Set that option to nil to prompt for all
TODO keywords.

This works best with a matching capture template: the template stores
a link to the message under point within the headline text, and this
command replies to that message in a DWIM style.

**** gnorb-org-email-subtree
Call on a Org subtree to export the subtree as either text or a file.
Then compose a message with the text in the message body, or the file
attached to the message.

There's a little overlap with org-mime, but this function allows for
exporting the subtree as a file, and does not compose a MIME-multipart
HTML message. I may look into integrating it a bit with org-mime
later.

This function also overlaps with `gnorb-org-handle-mail'. The only
difference is that it will first prompt to export the subtree of the
heading under point. After that, it behaves much like
`gnorb-org-handle-mail'.

Use `gnorb-org-handle-mail' when the primary purpose of the heading is
as a TODO reminding you to send or reply to an email. Any text under
the heading will be disregarded.

Use `gnorb-org-email-subtree' when the primary purpose of the heading
is the text (or tables or lists or...) of its subtree, and you just
happen to want to email that content to someone.

**** gnorb-org-agenda-popup-bbdb
Call this function in an Org Agenda buffer currently displaying an
`org-tags-view' search (ie called with the "m" or "M" keys). It will
look through your BBDB database and pop up a BBDB buffer displaying
all records that match the current tags search.
*** User Options
**** gnorb-org-capture-collect-link-p
When this is set to t, the capture process will always store a link to
the Gnus message or BBDB record under point, even when the link isn't
part of the capture template. It can then be added to the captured
heading with org-insert-link, as usual.
**** gnorb-org-agenda-popup-bbdb
Set to t to automatically pop up the BBDB buffer displaying records
corresponding to the Org Agenda tags search underway. If this is nil
you can always do it manually with the command of the same name.
**** gnorb-org-bbdb-popup-layout
Controls the layout of the Agenda-related BBDB popup, takes the same
values as bbdb-pop-up-layout.
*** Suggested Keybindings
#+BEGIN_SRC emacs-lisp
  (eval-after-load "gnorb-org"
    '(progn
       (org-defkey org-mode-map (kbd "C-c C") 'gnorb-org-contact-link)
       (org-defkey org-mode-map (kbd "C-c H") 'gnorb-org-handle-mail)
       (org-defkey org-mode-map (kbd "C-c E") 'gnorb-org-email-subtree)
       (setq gnorb-org-agenda-popup-bbdb t)
       (eval-after-load "org-agenda"
         '(org-defkey org-agenda-mode-map (kbd "H") 'gnorb-org-handle-mail)
         '(org-defkey org-agenda-mode-map (kbd "V") 'gnorb-org-agenda-popup-bbdb))))
#+END_SRC
** Gnorb-Gnus
*** Functions
**** gnorb-gnus-article-org-attach
When called on an email with attached files, prompt for an Org heading
and attach the files to that heading using org-attach.
**** Using attach with org capture
Set the new :gnus-attachments key to "t" in a capture template that
you use on mail messages, and you'll be queried to re-attach the
message's attachments onto the newly-captured heading.
*** User Options
**** gnorb-gnus-mail-search-backend
Specifies the search backend that you use for searching mails.
Currently supports notmuch, mairix, and namazu: set this option to one
of those symbols.
**** gnorb-gnus-capture-always-attach
Treat all capture templates as if they had the :gnus-attachments key
set to "t". This only has any effect if you're capturing from a Gnus
summary or article buffer.
*** Suggested Keybindings
#+BEGIN_SRC emacs-lisp
  (eval-after-load "gnorb-gnus"
    '(progn
       (define-key gnus-summary-mime-map "a" 'gnorb-gnus-article-org-attach)
       (push '("attach to org heading" . gnorb-gnus-mime-org-attach)
             gnus-mime-action-alist)
       ;; The only way to add mime button command keys is by redefining
       ;; gnus-mime-button-map, possibly not ideal. Ideal would be a
       ;; setter function in gnus itself.
       (push '(gnorb-gnus-mime-org-attach "a" "Attach to Org heading")
             gnus-mime-button-commands)
       (setq gnus-mime-button-map
             (let ((map (make-sparse-keymap)))
               (define-key map gnus-mouse-2 'gnus-article-push-button)
               (define-key map gnus-down-mouse-3 'gnus-mime-button-menu)
               (dolist (c gnus-mime-button-commands)
                 (define-key map (cadr c) (car c)))
               map))))
#+END_SRC
** Wishlist/TODO
- Support adding X-Org-Id headers to Gnus messages, which point at
  relevant Org headings (possibly not really useful).
- Provide a command that, when in the Org Agenda, does an email search
  for messages received in the visible date span, or day under point,
  etc. Make it work in the calendar, as well?
- Look into message tagging in Gnus -- what are the options? Is it
  possible to search for tagged messages when we do an Org agenda tag
  search?
- Create a BBDB field holding Org links to the N most recently
  received (or recently viewed) mails from the contact.
- Consider merging `gnorb-org-handle-mail' and
  `gnorb-org-email-subtree' altogether.
